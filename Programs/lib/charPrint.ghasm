;; Char Print Routine (5f)
; R0: Character
; R1: X Pos
; R2: Y Pos
; R3: Font Address
#DEF ScreenAddress 0xb000
#SHARE printChar
printChar:
PSH
PSH R0
AOR
ADO 0
ST R0 $PrevAO
POP R0
ADD R0 $PrevAO
ADD R3 $PrevAO

ST R1 $xPos
ST R2 $yPos

PSH R0

CE R0 0xa ; Check if it equals newline
JMPC newlineCase

SUB R0 ' '
SHL R0 2 					; Multiply by 4 because each font character takes 4 bytes
ADD R3				; Add the address of the font
JMP casesDone

newlineCase:
LDZ R3
ADD R0 94*4
JMP casesDone

casesDone:
LD R1 0
PSH R1
STZ R1
LD R3 $yPos
SHL R3 9
ADD R3 $xPos
SHRO R3						; Divide by 2 because each address points to 2 chars
ADD R3 ScreenAddress

DrawCharRow:
	DD R1
	INC R1

	LD R2 $xPos
	AND R2 1
	CEZ R2					; Whether to draw in the first or second word of byte
	JMPC DrawCharFirst
		LDD R0
		PSH R0

		DD R3
		ADD R3 32
		SHR R0 8
		LDD R2
		AND R2 0xff00
		OR R2
		STD R0

		POP R0

		DD R3
		ADD R3 32
		AND R0 0x00ff
		LDD R2
		AND R2 0xff00
		OR R2
		STD R0
	JMP DrawCharExit
	DrawCharFirst:
		LDD R0
		PSH R0

		DD R3
		ADD R3 32
		AND R0 0xff00
		LDD R2
		AND R2 0x00ff
		OR R2
		STD R0

		POP R0

		DD R3
		ADD R3 32
		SHL R0 8
		LDD R2
		AND R2 0x00ff
		OR R2
		STD R0
	DrawCharExit:

	POP R0
	INC R0
	CNE R0 4
	PSH R0
	JMPC DrawCharRow
DrawCharReturn:
	POP R0
	POP R1
	POP
	ADO $PrevAO
	RET

PrevAO: .db 0

xPos: .db 0
yPos: .db 0
