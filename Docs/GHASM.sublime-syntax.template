%YAML 1.2
---
# See http://www.sublimetext.com/docs/syntax.html
file_extensions:
  - ghasm
scope: source.ghasm
contexts:
  main:
    - match: ';'
      scope: punctuation.definition.comment.assembly
      push: line_comment

    - match: '^#DEF'
      scope: keyword.control.assembly
      push: definitionScope

    - match: '^#INC'
      scope: keyword.control.assembly

    - match: '^#ORG'
      scope: keyword.control.assembly
      push: data_byte

    - match: '^#MACRO'
      scope: keyword.control.assembly

    - match: '^#ENDM'
      scope: keyword.control.assembly

    - match: '^#SHARE'
      scope: keyword.control.assembly

    - match: '^#RAMFS'
      scope: keyword.control.assembly
      
    - match: '^(\s)*(%INSTRUCTIONS%)\b'
      scope: keyword.control.assembly
      push: commandArgs

    - match: '^(\s)*(%SHORTHAND%)\b'
      scope: keyword.control.assembly
      push: commandArgs

    - match: '(\+|-|\/|\*)'
      scope: keyword.control.assembly

    - match: '(\s)*.db\b'
      scope: entity.name.class.assembly
      push: data_byte

    - match: '(\s)*.ds\b'
      scope: entity.name.class.assembly 
      push: data_string

    - match: '(\s)*.dz\b'
      scope: entity.name.class.assembly
      push: data_byte

    - match: '^\$'
      scope: keyword.operator
      push: addressStart

    - match: '^\s*[a-zA-Z0-9_]*:'
      scope: keyword.declaration.assembly

    - match: '^\b[a-zA-Z]+'
      scope: invalid.deprecated

  definitionScope:
    - match: $
      pop: true

    - match: ';'
      scope: punctuation.definition.comment.assembly
      push: line_comment

    - match: '\b0x[0-9a-fA-F]+\b'
      scope: constant.numeric.integer.hexadecimal.assembly

    - match: '\b0b[01\s]+\b'
      scope: constant.numeric.integer.binary.assembly

    - match: '\b[0-9]+\b'
      scope: constant.numeric.integer.decimal.assembly

    - match: '\b[a-zA-Z0-9_]+\b'
      scope: variable


  addressStart:
    - match: '\b0x[0-9abcdefABCDEF]{2}+\b'
      scope: constant.numeric.integer.hexadecimal.assembly
      pop: true

  commandArgs:
    - match: $
      pop: true
      
    - match: "'.'"
      scope: string.quoted.single
    
    - match: "'.*'"
      scope: invalid

    - match: '\bR[0-3]\b'
      scope: constant.character.decimal.assembly # Register

    - match: '\$'
      scope: keyword.operator

    - match: '\b0x[0-9a-fA-F]+\b'
      scope: constant.numeric.integer.hexadecimal.assembly

    - match: '\b0b[01\s]+\b'
      scope: constant.numeric.integer.binary.assembly

    - match: '\b[0-9]+\b'
      scope: constant.numeric.integer.decimal.assembly

    - match: '\b[a-zA-Z0-9_]+'
      scope: variable

    - match: ';'
      scope: punctuation.definition.comment.assembly
      push: line_comment

    - match: '(\+|-|\/|\*)'
      scope: keyword.control.assembly

  data_byte:
    - match: $
      pop: true
      
    - match: "'.'"
      scope: string.quoted.single
    
    - match: "'.*'"
      scope: invalid

    - match: '\b0x[0-9a-fA-F]+\b'
      scope: constant.numeric.integer.hexadecimal.assembly

    - match: '\b0b[01\s]+\b'
      scope: constant.numeric.integer.binary.assembly

    - match: '\b[0-9]+\b'
      scope: constant.numeric.integer.decimal.assembly

    - match: '\b[a-zA-Z0-9_]+\b'
      scope: variable

    - match: ';'
      scope: punctuation.definition.comment.assembly
      push: line_comment

    - match: '(\+|-|\/|\*)'
      scope: keyword.control.assembly

  data_char:
    - match: '\n'
      pop: true
    - match: "'.'"
      scope: string.quoted.single
      pop: true

  data_string:
    - match: '\n'
      pop: true
    - match: '".*"'
      scope: string.quoted.single
      pop: true

  line_comment:
    - meta_scope: comment.line.assembly
    - match: $
      pop: true
